version: '3.8'
services:
  backend:
    container_name: backend
    build: backend/
    restart: always
    depends_on:
      - db

  frontend:
    container_name: frontend
    build: ./
    restart: always
    ports:
      - "80:3000"
    volumes:
      - ./deployment/nginx:/etc/nginx/conf.d
      - ./deployment/certbot/conf:/etc/letsencrypt
      - ./deployment/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot:v2.6.0
    restart: unless-stopped
    volumes:
      - ./deployment/certbot/conf:/etc/letsencrypt
      - ./deployment/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    image: postgres:15.3
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

#  nginx:
#    image: nginx:1.25
#    restart: unless-stopped
#    ports:
#      - 80:80
#    volumes:
#      - ./deployment/nginx:/etc/nginx/conf.d
